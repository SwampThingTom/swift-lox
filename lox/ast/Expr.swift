// Autogenerated by Lox generate_ast.

class Expr {

    class Binary: Expr {
        let left: Expr
        let oper: Token
        let right: Expr
        init(left: Expr, oper: Token, right: Expr) {
            self.left = left
            self.oper = oper
            self.right = right
        }
    }

    class Grouping: Expr {
        let expression: Expr
        init(expression: Expr) {
            self.expression = expression
        }
    }

    class Literal: Expr {
        let value: Any
        init(value: Any) {
            self.value = value
        }
    }

    class Unary: Expr {
        let oper: Token
        let right: Expr
        init(oper: Token, right: Expr) {
            self.oper = oper
            self.right = right
        }
    }
}
